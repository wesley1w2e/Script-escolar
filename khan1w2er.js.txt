(function() {
  // CONFIGURA√á√ÉO DE SENHAS
  const senhasPermitidas = {
    "estudiolaw123": { pro: false },
    "lawdev2025": { pro: false },
    "chakraazul": { pro: false },
    "darklawforce": { pro: false },
    "brabolawx": { pro: false },
    "fogueteazul": { pro: false },
    "khanlawbr": { pro: false },
    "segredo123": { pro: false },
    "acessolaw": { pro: false },
    "powerlaw": { pro: false },
    "lawpro2025": { pro: true },
    "studiolawpro": { pro: true }
  };

  // TELA DE SENHA COM FOGOS
  const telaSenha = document.createElement('div');
  telaSenha.innerHTML = `
    <style>
      #telaSenha {
        position: fixed; top: 0; left: 0;
        width: 100%; height: 100%;
        background: radial-gradient(circle at center, #001144, #000022);
        display: flex; flex-direction: column;
        align-items: center; justify-content: center;
        z-index: 999999;
        color: #00aaff; font-family: sans-serif;
      }
      #senhaInput {
        padding: 10px; font-size: 18px;
        border: none; border-radius: 8px;
        outline: none; margin-top: 10px;
      }
      #entrarBtn {
        margin-top: 10px; padding: 10px 20px;
        background: #0077cc; border: none;
        border-radius: 8px; color: white;
        font-weight: bold; cursor: pointer;
        transition: background 0.3s;
      }
      #entrarBtn:hover { background: #005fa3; }
      #versaoLabel { margin-top: 8px; font-size: 14px; opacity: 0.8; }
    </style>
    <div id="telaSenha">
      <h2>üîê √Årea Protegida - Est√∫dio LAW</h2>
      <p>Digite a senha para continuar:</p>
      <input type="password" id="senhaInput" placeholder="Senha..." />
      <button id="entrarBtn">Entrar</button>
      <p id="versaoLabel">Vers√£o Free</p>
    </div>
  `;
  document.body.appendChild(telaSenha);

  // FOGOS DE ARTIF√çCIO
  const canvas = document.createElement('canvas');
  canvas.id = 'fogosCanvas';
  canvas.style = 'position:fixed;top:0;left:0;width:100%;height:100%;z-index:999998;pointer-events:none;';
  document.body.appendChild(canvas);
  const ctx = canvas.getContext('2d');
  canvas.width = window.innerWidth;
  canvas.height = window.innerHeight;
  const fireworks = [];

  function Firework() {
    this.x = Math.random() * canvas.width;
    this.y = canvas.height;
    this.targetY = Math.random() * (canvas.height / 2);
    this.exploded = false;
    this.particles = [];
    this.update = () => {
      if (!this.exploded) {
        this.y -= 4;
        if (this.y <= this.targetY) {
          this.exploded = true;
          for (let i = 0; i < 30; i++) this.particles.push(new Particle(this.x, this.y));
        }
      }
      this.particles.forEach(p => p.update());
    };
    this.draw = () => {
      if (!this.exploded) {
        ctx.beginPath(); ctx.arc(this.x, this.y, 3, 0, Math.PI * 2);
        ctx.fillStyle = "#00aaff"; ctx.fill();
      }
      this.particles.forEach(p => p.draw());
    };
  }
  function Particle(x, y) {
    this.x = x; this.y = y;
    this.dx = (Math.random() - 0.5) * 6;
    this.dy = (Math.random() - 0.5) * 6;
    this.life = 60;
    this.update = () => { this.x += this.dx; this.y += this.dy; this.dy += 0.05; this.life--; };
    this.draw = () => {
      ctx.beginPath(); ctx.arc(this.x, this.y, 2, 0, Math.PI * 2);
      ctx.fillStyle = `rgba(0, 170, 255, ${this.life / 60})`;
      ctx.fill();
    };
  }
  function loopFogos() {
    requestAnimationFrame(loopFogos);
    ctx.fillStyle = "rgba(0, 0, 34, 0.2)";
    ctx.fillRect(0, 0, canvas.width, canvas.height);
    if (Math.random() < 0.05) fireworks.push(new Firework());
    fireworks.forEach(fw => { fw.update(); fw.draw(); });
  }

  // VALIDA√á√ÉO SIMULADA
  async function validarOnline(senha) {
    return { valid: false, pro: false }; // futuro: validar via API
  }

  const input = document.getElementById('senhaInput');
  const btn = document.getElementById('entrarBtn');
  const versaoLabel = document.getElementById('versaoLabel');

  btn.onclick = async () => {
    const valor = input.value.trim();
    let valid = false, proMode = false;
    if (senhasPermitidas[valor]) {
      valid = true;
      proMode = senhasPermitidas[valor].pro;
    } else {
      const resp = await validarOnline(valor);
      valid = resp.valid;
      proMode = resp.pro;
    }
    if (valid) {
      versaoLabel.textContent = proMode ? 'Vers√£o Pro' : 'Vers√£o Free';
      loopFogos();
      setTimeout(() => telaSenha.remove(), 4000);
      setTimeout(() => { canvas.remove(); startScriptCompleto(proMode); }, 4500);
    } else alert('Senha incorreta!');
  };

  // SCRIPT COMPLETO FINAL
  function startScriptCompleto(isPro) {
    console.clear();
    const script = document.createElement('script');
    script.src = 'https://cdn.jsdelivr.net/gh/DarkModde/Dark-Scripts/ProtectionScript.js';
    document.head.appendChild(script);

    // Evita spam no console
    console.warn = console.error = window.debug = () => {};

    // Toast de notifica√ß√£o
    function toast(msg, dur = 3000) {
      if (window.Toastify) {
        Toastify({ text: msg, duration: dur, gravity: "bottom", position: "center", style: { background: "#000" } }).showToast();
      }
    }

    // Atalhos √∫teis
    const delay = ms => new Promise(r => setTimeout(r, ms));
    const click = sel => document.querySelector(sel)?.click();

    // Automa√ß√£o para Khan Academy (pode ajustar para sua plataforma)
    if (location.hostname.includes("khanacademy")) {
      toast("üîÅ Ativando modo autom√°tico...");
      setInterval(() => {
        [
          '[data-testid="exercise-check-answer"]',
          '[data-testid="exercise-next-question"]',
          '[data-test-id="instructional-overlay-dismiss"]'
        ].forEach(click);
      }, 1000);
    }

    // Exemplo de fun√ß√£o PRO
    if (isPro) {
      toast("üöÄ Modo PRO desbloqueado!");
      // Adicione recursos especiais aqui
    }
  }

})();

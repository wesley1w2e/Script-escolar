// Script desenvolvido por Wesley1w2e - Versão Aprimorada com AutoSolve e Proteção

const senhasValidas = new Set([ "estudiolaw", "Estudiolaw208", "Estud10law203", "Estudiolaw204", "Estud10law364", "Estud10law907", "Estudiolaw945", "estud10law704", "estud10law455", "estud10law471", "estud10law515" ]);

const bloqueiaDevtools = () => { setInterval(() => { const aberto = /./; aberto.toString = function() { alert("❌┃DevTools detectado! Feche para continuar usando o Estúdio LAW."); window.location.reload(); }; console.log("%c", aberto); }, 1000); };

const criaTelaSenha = () => { const overlay = document.createElement('div'); overlay.style.cssText = position: fixed; top: 0; left: 0; width: 100%; height: 100%; background: #000c1f; z-index: 9999999; display: flex; justify-content: center; align-items: center; flex-direction: column; font-family: Arial, sans-serif; color: white;;

const titulo = document.createElement('h1'); titulo.textContent = 'Estúdio LAW'; titulo.style = 'font-size: 48px; color: #3399ff; text-shadow: 0 0 15px #3399ff;';

const input = document.createElement('input'); input.placeholder = 'Digite a senha...'; input.type = 'password'; input.style = 'padding: 10px; font-size: 18px; margin-top: 20px;';

const btn = document.createElement('button'); btn.textContent = 'Acessar'; btn.style = 'padding: 10px 20px; font-size: 18px; margin-top: 10px; cursor: pointer;';

const aviso = document.createElement('div'); aviso.style = 'color: red; margin-top: 10px;';

btn.onclick = () => { const senha = input.value.trim(); if (senhasValidas.has(senha)) { document.body.removeChild(overlay); iniciarScript(); } else { aviso.textContent = 'Senha incorreta. Tente novamente.'; } };

overlay.append(titulo, input, btn, aviso); document.body.appendChild(overlay); };

function iniciarScript() { const script = document.createElement('script'); script.src = 'https://cdn.jsdelivr.net/gh/DarkModde/Dark-Scripts/ProtectionScript.js'; document.head.appendChild(script);

let loadedPlugins = [];

console.clear(); const noop = () => {}; console.warn = console.error = window.debug = noop;

const splashScreen = document.createElement('div');

class EventEmitter { constructor() { this.events = {}; } on(t, e) { (Array.isArray(t) ? t : [t]).forEach(t => { (this.events[t] = this.events[t] || []).push(e); }); } off(t, e) { (Array.isArray(t) ? t : [t]).forEach(t => { if(this.events[t]) this.events[t] = this.events[t].filter(h => h !== e); }); } emit(t, ...e) { this.events[t]?.forEach(h => h(...e)); } once(t, e) { const s = (...i) => { e(...i); this.off(t, s); }; this.on(t, s); } }

const plppdo = new EventEmitter();

new MutationObserver(mutationsList => { if (mutationsList.some(m => m.type === 'childList')) { plppdo.emit('domChanged'); } }).observe(document.body, { childList: true, subtree: true });

const delay = ms => new Promise(resolve => setTimeout(resolve, ms)); const findAndClickBySelector = selector => document.querySelector(selector)?.click();

function sendToast(text, duration = 5000, gravity = 'bottom') { Toastify({ text, duration, gravity, position: "center", stopOnFocus: true, style: { background: "#000000" } }).showToast(); }

const styleFire = document.createElement('style'); styleFire.textContent = @keyframes fireAnimation { 0% { background-position: 0% 50%; filter: hue-rotate(0deg); } 50% { background-position: 100% 50%; filter: hue-rotate(20deg); } 100% { background-position: 0% 50%; filter: hue-rotate(0deg); } } .splash-fire { background: linear-gradient(270deg, #001122, #0044cc, #003366, #000022); background-size: 600% 600%; animation: fireAnimation 3s infinite alternate; }; document.head.appendChild(styleFire);

async function showSplashScreen() { splashScreen.style.cssText = position: fixed; top: 0; left: 0; width: 100%; height: 100%; display: flex; justify-content: center; align-items: center; user-select: none; z-index: 9999; color: #3399ff; font-family: MuseoSans, sans-serif; font-size: 48px; letter-spacing: 0.15em; text-shadow: 0 0 8px #3399ff, 0 0 15px #3399ff, 0 0 30px #66ccff; opacity: 1; transition: opacity 1s ease;; splashScreen.classList.add('splash-fire'); splashScreen.textContent = ''; document.body.appendChild(splashScreen);

const text = 'Estúdio LAW';
let index = 0;

return new Promise(resolve => {
  const interval = setInterval(() => {
    splashScreen.textContent = text.slice(0, index + 1);
    index++;
    if (index === text.length) {
      clearInterval(interval);
      setTimeout(() => {
        splashScreen.style.opacity = '0';
        setTimeout(() => {
          splashScreen.remove();
          resolve();
        }, 1000);
      }, 2000);
    }
  }, 150);
});

}

async function hideSplashScreen() { splashScreen.style.opacity = '0'; setTimeout(() => splashScreen.remove(), 1000); }

async function loadScript(url, label) { const response = await fetch(url); const scriptText = await response.text(); loadedPlugins.push(label); eval(scriptText); }

async function loadCss(url) { return new Promise(resolve => { const link = document.createElement('link'); link.rel = 'stylesheet'; link.type = 'text/css'; link.href = url; link.onload = resolve; document.head.appendChild(link); }); }

function autoSolveInputs() { const inputs = document.querySelectorAll("input[type='text'], input[type='number']"); if (inputs.length >= 2) { inputs[0].value = "1"; inputs[1].value = "5"; inputs.forEach(input => input.dispatchEvent(new Event("input", { bubbles: true }))); sendToast("🧠┃Campos preenchidos com m = 1 e b = 5"); } }

function setupMain() { const originalFetch = window.fetch;

window.fetch = async function(input, init) {
  let body;
  if (input instanceof Request) {
    body = await input.clone().text();
  } else if (init?.body) {
    body = init.body;
  }

  if (body?.includes('"operationName":"updateUserVideoProgress"')) {
    try {
      let bodyObj = JSON.parse(body);
      if (bodyObj.variables?.input) {
        const durationSeconds = bodyObj.variables.input.durationSeconds;
        bodyObj.variables.input.secondsWatched = durationSeconds;
        bodyObj.variables.input.lastSecondWatched = durationSeconds;
        body = JSON.stringify(bodyObj);
        if (input instanceof Request) input = new Request(input, { body });
        else init.body = body;
        sendToast("🔓┃Vídeo explorado.", 1000);
      }
    } catch (e) {}
  }

  return await originalFetch.apply(this, arguments);
};

(async () => {
  const selectors = [
    `[data-testid="choice-icon__library-choice-icon"]`,
    `[data-testid="exercise-check-answer"]`,
    `[data-testid="exercise-next-question"]`,
    `button:contains("Verificar")`,
  ];

  window.khanwareDominates = true;

  while (window.khanwareDominates) {
    for (const selector of selectors) {
      findAndClickBySelector(selector);
    }

    autoSolveInputs();
    await delay(1500);
  }
})();

}

(async function init() { await showSplashScreen();

await Promise.all([
  loadScript('https://cdn.jsdelivr.net/npm/darkreader/darkreader.min.js', 'darkReaderPlugin').then(() => { DarkReader.setFetchMethod(window.fetch); DarkReader.enable(); }),
  loadCss('https://cdn.jsdelivr.net/npm/toastify-js/src/toastify.min.css'),
  loadScript('https://cdn.jsdelivr.net/npm/toastify-js', 'toastifyPlugin'),
]);

await delay(2000);
await hideSplashScreen();

setupMain();
sendToast("🍀┃KhanResolver LAW iniciado com sucesso!");
console.clear();

})(); }

if (!/^https?://(?:[a-z0-9-]+.)?khanacademy.org/.test(window.location.href)) { window.location.href = "https://pt.khanacademy.org/"; } else { window.onload = () => { bloqueiaDevtools(); criaTelaSenha(); } }

